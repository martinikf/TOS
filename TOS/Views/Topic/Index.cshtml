@using Microsoft.AspNetCore.Mvc.Localization
@using TOS.Resources
@using System.Globalization
@model IEnumerable<TOS.Models.Topic>

@inject IHtmlLocalizer<SharedResource> SharedLocalizer

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@ViewData["TopicsIndexHeading"]</h1>
@if (@ViewData["TopicsIndexGroupId"] != null && User.IsInRole("Teacher"))
{
    <a asp-controller="Group" asp-action="Edit" asp-route-id="@ViewData["TopicsIndexGroupId"]">Edit group</a>
}
@if (User.IsInRole("Teacher"))
{
    <p>
        <a asp-action="Create" asp-route-groupName="@ViewData["TopicsIndexGroupName"]">Create New Topic</a>
    </p>
}

TODO: Filtering, sorting, searching here |-----------------------------------|

@foreach (Topic item in Model) {
    <div class="topic">
        
        <div class="topic__name">
            <a asp-action="Details" asp-route-id="@item.TopicId">
                <h3>@SelectStringByLanguage(item.Name, item.NameEng)</h3>
            </a>
        </div>

        @if (item.Supervisor != null)
        {
            <div class="topic__supervisor">

                @Html.DisplayFor(modelItem => item.Supervisor.FirstName)
                @Html.DisplayFor(modelItem => item.Supervisor.LastName)

            </div>
        }

        <div class="topic__infoboxes">
            @if (item.AssignedStudent == null)
            {
                <span class="infobox">@SharedLocalizer["Free topic"]</span>
            }
            else
            {
                <span class="infobox">@SharedLocalizer["Taken topic"]</span>
            }
            
            @foreach (var programme in item.TopicRecommendedPrograms)
            {
                <span class="infobox">@SelectStringByLanguage(programme.Programme.Name, programme.Programme.NameEng)</span>
            }
        </div>
        
        <div class="topic__description">
            @SelectStringByLanguage(item.DescriptionShort, item.DescriptionShortEng)
        </div>
        <hr/>
    </div>
}

@functions{

    private static string SelectStringByLanguage(string cz, string eng)
    {
        @if (CultureInfo.CurrentCulture.Name.Contains("cz"))
        {
            return cz;
        }
        return eng;
    }
}

<!--
<a asp-action="Edit" asp-route-id="item.TopicId">Edit</a>
<a asp-action="Details" asp-route-id="item.TopicId">Details</a>
<a asp-action="Delete" asp-route-id="item.TopicId">Delete</a>
-->