@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TOS.Extensions
@model TOS.ViewModels.IndexViewModel

@{
    ViewData["Title"] = @SharedLocalizer["Topic_Index_Heading_" + Model.Group.NameEng];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@SharedLocalizer["Topic_Index_Heading_" + Model.Group.NameEng]</h1>

<p >
    @if (User.IsInRole("Topic") || User.IsInRole("AnyTopic"))
    {
        
        <a class="btn btn-primary" asp-action="Create" asp-route-groupName="@Model.Group.NameEng">@SharedLocalizer["Topic_Index_Create"]</a>
       
    }
    @if (User.IsInRole("Administrator"))
    {
        <a class="btn btn-primary" asp-controller="Group" asp-action="Edit" asp-route-id="@Model.Group.GroupId">@SharedLocalizer["Topic_Group_Edit"]</a>

    }
</p>

@if (User.IsInRole("ProposeTopic"))
{
    <p>
        <a class="btn btn-primary" asp-action="Propose" asp-route-groupName="@Model.Group.NameEng">@SharedLocalizer["Topic_Index_Propose"]</a>
    </p>
}

<partial name="Text" model="@Html.SelectStringByLanguage(Model.Group.DescriptionEng, Model.Group.Description)"/>


<form asp-action="Index" method="get">
    <input type="hidden" name="groupName" value="@Model.Group.NameEng"/>
    <div class="row g-2 align-items-center">
        <div class="col-auto">
            <input type="text" class="form-control" name="searchString" placeholder="@SharedLocalizer["Topic_Index_Search_Placeholder"]" value="@Model.SearchString" autocomplete="off"/>
        </div>

        <div class="form-check col-auto">
            <label for="showTaken">@SharedLocalizer["Topic_Index_ShowTaken"]</label>
            <input class="form-check-input" name="showTakenTopics" id="showTaken" type="checkbox" value="true" @Html.Raw(Model.ShowTakenTopics ? "checked" : "")/>
        </div>
        
        <div class="col-auto">
            <select class="form-select" name="programmeName">
                <option value="">@SharedLocalizer["Topic_Index_AllProgrammes"]</option>
                @foreach (var programme in Model.Programmes)
                {
                    @Html.SelectOption(programme.NameEng, @Html.SelectStringByLanguage(programme.NameEng, programme.Name), Model.SelectedProgramme)
                }
            </select>
        </div>
        
        <div class="col-auto">
            <label for="orderBy">@SharedLocalizer["Topic_Index_OrderBy"]</label>
        </div>
        <div class="col-auto">
            <select class="form-select" id="orderBy" name="orderBy">
                @Html.SelectOption("Supervisor", SharedLocalizer["orderBySupervisor"].Value, Model.OrderBy)
                @Html.SelectOption("Name", SharedLocalizer["orderByName"].Value, Model.OrderBy)
                @Html.SelectOption("Interest", SharedLocalizer["orderByInterest"].Value, Model.OrderBy)
            </select>
        </div>
        
        <div class="col-auto">
            <input type="submit" class="btn btn-primary" value="@SharedLocalizer["Topic_Index_Search"]"/>
        </div>

    </div>

    @if (User.IsInRole("Topic") || User.IsInRole("AnyTopic"))
     {
         <div class="row g-3 align-items-center mx-auto">
             <div class="col-auto form-check">
                 <label for="showHidden">@SharedLocalizer["Topic_Index_ShowHidden"]</label>
                 <input class="form-check-input" name="showHidden" id="showHidden" type="checkbox" value="true" @Html.Raw(Model.ShowHiddenTopics ? "checked" : "")/>
             </div>

             <div class="col-auto form-check">
                 <label for="showOnlyProposed">@SharedLocalizer["Topic_Index_ShowProposedOnly"]</label>
                 <input class="form-check-input" name="showOnlyProposed" id="showOnlyProposed" type="checkbox" value="true" @Html.Raw(Model.ShowProposedTopics ? "checked" : "")/>
             </div>
         </div>
     }
</form>

<hr/>

@if (Model.OrderBy == "Supervisor")
{
    @if (Model.Topics.Any(x => x.Supervisor == null))
    {
        <h2 class="h3 mt-4 mb-2">@SharedLocalizer["Topic_Index_TopicsWithoutSupervisor"]</h2>

        @foreach (var topic in Model.Topics.Where(x => x.Supervisor == null))
        {
            <partial name="TopicPreview" model="topic"/>
        }
    }

    @foreach (var supervisor in Model.Topics.Where(topic => topic.Supervisor != null).Select(x => x.Supervisor).Distinct().OrderBy(y => y!.LastName))
    {
        <h2 class="h3 mt-4 mb-2">@supervisor!.GetDisplayName()</h2>
        @foreach (var topic in supervisor.SupervisedTopics.Where(topic => Model.Topics.Contains(topic)))
        {
            {
                topic.SupervisorId = null;
            }
            <partial name="TopicPreview" model="topic"/>
        }
    }
}
else
{
    @foreach (var topic in Model.Topics.Where(topic => Model.Topics.Contains(topic))) {
        <partial name="TopicPreview" model="topic"/>
    } 
}


