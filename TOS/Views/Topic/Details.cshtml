@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Mvc.Routing
@using TOS.Resources
@using System.Globalization
@using TOS.Extensions
@model TOS.Models.Topic

@inject IHtmlLocalizer<SharedResource> SharedLocalizer

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts
{
    <script>
    $(document).ready(function (){
        $("#btn-interest").on("click", function (){
            var formData = new FormData();
            var topicId = @Model.TopicId;
            var url = '@Url.Action("Interest", "Topic")' + "?topicId=" + topicId;
            $.ajax({
            type: 'GET',
            url: url,
            contentType: false,
            processData: false,
            cache: false,
            success: function (response) {
                var element = $("#btn-interest");
                element = element[0];
                
                console.log(element);
                if (element.classList.contains("interested")){
                    element.innerHTML = "@SharedLocalizer["Add interest"]";
                    element.classList.remove("interested");
                    element.classList.add("not-interested");
                    console.log("User removed interest from this topic");
                }
                else if (element.classList.contains("not-interested")){
                    element.innerHTML = "@SharedLocalizer["Remove interest"]";
                    element.classList.remove("not-interested");
                    element.classList.add("interested");
                    console.log("User interested in this topic");
                }
                else{
                    console.log("Error");
                }
                 console.log(response);  
            },
             error: function (response){
                console.log("Ajax failed");
                }
            });
        });
    });
    </script>
    
    <script>
        function ReplyButtonClick(val){
            var replyForm = "ReplyForm"+val;
        
            var div = document.getElementById(replyForm);
            if (div.style.display !== 'none') {
                div.style.display = 'none';
                console.log(replyForm + ", hide");
            }
            else {
                div.style.display = 'block';
                console.log(replyForm + ", show");
            }
        }
    </script>
}


<h1>Details</h1>

@if (User.IsInRole("InterestTopic"))
{
    <a href="javascript:void(0)" class="btn btn-primary @ViewData["UserInterestClass"]" id="btn-interest">@ViewData["UserInterestString"] </a>
}

<div>
    <h4>@Html.DisplayFor(model => model.Name)</h4>
    <hr />
    @if(Model.AssignedStudent != null)
    {
        <span class="infobox">@SharedLocalizer["Taken topic"]</span>
    }
    else
    {
        <span class="infobox">@SharedLocalizer["Free topic"]</span>
    }
    
    @foreach(var programme in Model.TopicRecommendedPrograms)
    {
        <span class="infobox">@Html.SelectStringByLanguage(programme.Programme.NameEng, programme.Programme.Name)</span>
    }

    <h5>@SharedLocalizer["Short topic description"]</h5>
    <p>SelectStringByLanguage(Model.DescriptionShort, Model.DescriptionShortEng)</p>
    <h5>@SharedLocalizer["Long topic description"]</h5>
    <p>@Html.SelectStringByLanguage(Model.DescriptionLongEng, Model.DescriptionLong)</p>
    <h5>@SharedLocalizer["Supervisor"]</h5>
    <p>
        @Html.DisplayFor(model => model.Supervisor.FirstName) @Html.DisplayFor(model => model.Supervisor.LastName)
        @Html.DisplayFor(model => model.Supervisor.Email)
    </p>
    <p>
        Created by:
        @Html.DisplayFor(model => model.Creator.FirstName) @Html.DisplayFor(model => model.Creator.LastName)
        @Html.DisplayFor(model => model.Creator.Email)
    </p>
    <h5>@SharedLocalizer["Topic group"]</h5>
    <p>@Html.SelectStringByLanguage(Model.Group.NameEng, Model.Group.Name)</p>
    
    @if (Model.Attachments.Count > 0)
    {
        <div>
            <h2>@SharedLocalizer["Attachments"]</h2>
            <hr/>
            @foreach (var attachment in Model.Attachments)
            {
                <div class="Attachment border border-dark rounded p-2 m-2 col-sm-4">
                    <h4>@attachment.Name</h4>
                    @attachment.Creator.Email
                    <!-- FILE -->
                    <a href="/files/@attachment.TopicId/@attachment.Name">Download File</a>
                </div>
            }
        </div>
    }
    
    @if (User.IsInRole("SeeComments"))
    {
        <div class="CommentSection">
            <div class="Comments">

                @foreach (var comment in PrepareComments(Model.Comments))
                {
                    <div class="Comment" style="margin-left: @(comment.Depth * 40)px">
                        <div class=" border border-dark rounded p-2 m-2">

                            <div class="Comment__body">
                                @if (!comment.Anonymous || User.IsInRole("SeeAuthorOfAnonymousComment") || User.Identity.Name.Equals(comment.Author.UserName))
                                {
                                    if (comment.Anonymous)
                                    {
                                        <h5 class="Comment__AuthorName">@comment.Author.FirstName @comment.Author.LastName - @comment.Author.Email - @SharedLocalizer["Anonymous"]</h5>

                                    }
                                    else
                                    {
                                        <h5 class="Comment__AuthorName">@comment.Author.FirstName @comment.Author.LastName - @comment.Author.Email</h5>
                                    }
                                }
                                else
                                {
                                    <h5 class="Comment__AuthorName">@SharedLocalizer["Anonymous"]</h5>
                                }

                                <p class="Comment__CreatedAt">@comment.CreatedAt</p>
                                <p class="Comment__Text">
                                    
                                    @if (comment.Text == "Deleted comment")
                                    {
                                        @SharedLocalizer["Deleted comment"]
                                    }
                                    else
                                    {
                                        @comment.Text
                                    }
                                </p>
                                <button class="ReplyButton" value="@comment.CommentId" onclick="ReplyButtonClick(this.value)">Reply</button>
                                @if((User.Identity.Name.Equals(comment.Author.UserName) && User.IsInRole("DeleteComment")) || User.IsInRole("DeleteAnyComment"))
                                {
                                    <a class="DeleteCommentButton" asp-action="DeleteComment" asp-route-commentId="@comment.CommentId" asp-route-topicId="@Model.TopicId">Delete</a>
                                }
                            
                                </div>
                            <div class="Comment__reply row" id="ReplyForm@(comment.CommentId)" style="display: none;">
                                <div class="col-md-8">
                                    <form asp-action="AddComment">
                                        <input type="hidden" asp-for="TopicId" name="id">
                                        <input type="hidden" name="parentId" value="@comment.CommentId"/>
                                        <div class="form-group">
                                            <label class="control-label">Reply</label>
                                            <textarea name="text" class="form-control" rows="3"></textarea>
                                        </div>
                                        @if (User.IsInRole("CreateAnonymousComment"))
                                        {
                                            <label class="control-label">@SharedLocalizer["Anonymous"]</label>
                                            <input type="checkbox" name="anonymous" value="true"/>
                                        }
                                        <div class="form-group">
                                            <input type="submit" value="@SharedLocalizer["CommentSend"]" class="btn btn-primary">
                                        </div>
                                    </form>
                                </div>
                            </div>

                        </div>
                    </div>
                }
            </div>
            <div class="NewComment">
                <h3>@SharedLocalizer["New comment"]</h3>
                <hr/>
                <div class="row">
                    <div class="col-md-8">
                        <form asp-action="AddComment">
                            <input type="hidden" asp-for="TopicId" name="id"/>
                            <div class="form-group">
                                <label class="control-label">Text</label>
                                <textarea name="text" class="form-control" rows="3"></textarea>
                            </div>

                            @if (User.IsInRole("CreateAnonymousComment"))
                            {
                                <label class="control-label">@SharedLocalizer["Anonymous"]</label>
                                <input type="checkbox" name="anonymous" value="true"/>
                            }

                            <div class="form-group">
                                <input type="submit" value="Send" class="btn btn-primary"/>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div>
    @if (User.IsInRole("EditAnyTopic") || User.IsInRole("EditTopic"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.TopicId">Edit</a>
    }

    @if(User.IsInRole("DeleteAnyTopic") || User.IsInRole("DeleteTopic"))
    {
        <a asp-action="Delete" asp-route-id="@Model?.TopicId">Delete</a>
    }
</div>


@functions{

    private static IEnumerable<Comment> PrepareComments(IEnumerable<Comment> comments)
    {
        List<Comment> returnComments = new ();

        //Foreach root comment
        foreach(var comment in comments.Where(x => x.ParentComment == null))
        {
            returnComments.Add(comment);
            returnComments.AddRange(PrepareReplies(comment.Replies, 1));
        }
        
        
        return returnComments;
    }

    private static IEnumerable<Comment> PrepareReplies(IEnumerable<Comment> comments, int depth)
    {
        List<Comment> returnComments = new ();

        foreach (var comment in comments)
        {
            comment.Depth = depth;
            returnComments.Add(comment);
            returnComments.AddRange(PrepareReplies(comment.Replies, depth + 1));
        }
        
        return returnComments;
    }
}

