@using TOS.Extensions
@model TOS.Models.Topic

@{
    ViewData["Title"] = SharedLocalizer["Topic_Details_Heading"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<article>
    <h1>@Html.SelectStringByLanguage(Model.NameEng, Model.Name)</h1>
    
    <p>
        @if (User.IsInRole("InterestTopic"))
        {
            @if (Model.UserInterestedTopics.Any(x => x.User.UserName == User.Identity!.Name))
            {
                <a href="javascript:void(0)" class="btn btn-primary interested" id="btn-interest">@SharedLocalizer["Remove interest"]</a>
            }
            else
            {
                <a href="javascript:void(0)" class="btn btn-primary not-interested" id="btn-interest">@SharedLocalizer["Add interest"]</a>
            }
        }
        
        @if (Html.CanEditTopic(Model, User.Identity?.Name, User.IsInRole("Topic"), User.IsInRole("AnyTopic"), User.IsInRole("ProposeTopic")))
        {
            <a asp-action="Edit" class="btn btn-primary" asp-route-id="@Model.TopicId">Edit</a>
        }

        @if (Html.CanDeleteTopic(Model, User.Identity?.Name, User.IsInRole("Topic"), User.IsInRole("AnyTopic"), User.IsInRole("ProposeTopic")))
        {
            <a asp-action="Delete" class="btn btn-outline-danger" asp-route-id="@Model.TopicId">Delete</a>
        }
    </p>
    
    <h2 class="h5">@SharedLocalizer["Topic_Details_Supervisor"]: @Model.Supervisor?.GetDisplayName()</h2>
    @if (Model.AssignedId != null && (User.IsInRole("Topic") || User.IsInRole("AnyTopic")))
    {
        <p>@SharedLocalizer["Topic_Details_AssignedStudent"]: @Model.AssignedStudent!.GetDisplayName() - @Model.AssignedStudent.Email</p>
    }
    <p>@Html.SelectStringByLanguage(Model.Group.NameEng, Model.Group.Name) - @SharedLocalizer[Model.Type.ToString()]</p>


    <div class="d-flex flex-wrap mb-3 gap-2">
        @if (Model.Visible == false)
        {
            <span class="badge bg-danger">@SharedLocalizer["Hidden topic"]</span>
        }
        @if (Model.Proposed)
        {
            <span class="badge bg-success p-2">@SharedLocalizer["Proposed topic"]</span>
        }
        else
        {
            @if (Model.AssignedId == null)
            {
                <span class="badge bg-success p-2">@SharedLocalizer["Free topic"]</span>
            }
            else
            {
                <span class="badge bg-danger p-2">@SharedLocalizer["Taken topic"]</span>
            }
        }
        @foreach (var programme in Model.TopicRecommendedPrograms.Select(x => x.Programme))
        {
            <span class="badge bg-secondary p-2">@Html.SelectStringByLanguage(programme.NameEng, programme.Name)</span>
        }

        <span class="badge rounded-pill bg-secondary ms-auto p-2">@SharedLocalizer["Topic_Details_InterestedStudents"]: @Model.UserInterestedTopics.Count</span>
    </div>
    @if (Model.Proposed && (User.IsInRole("Topic") || User.IsInRole("AnyTopic")))
    {
        <p>
            @SharedLocalizer["Topic_Details_ProposedBy"]: @Model.Creator.GetDisplayName() - @Model.Creator.Email
        </p>
    }

    <hr/>

    <p>@Html.SelectStringByLanguage(Model.DescriptionShortEng!, Model.DescriptionShort)</p>

    <p>@Html.SelectStringByLanguage(Model.DescriptionLongEng, Model.DescriptionLong)</p>

    @if (Model.Attachments.Count > 0)
    {
        <hr/>
        <div>
            <h3>@SharedLocalizer["Topic_Details_Attachments"]</h3>
            <div class="d-flex flex-wrap">
            @foreach (var attachment in Model.Attachments)
            {
                <div class="border border-dark rounded p-2 m-2 col-auto">
                <a href="/files/@attachment.TopicId/@attachment.Name">
                    @attachment.Name
                </a>
                </div>
            }
            </div>
        </div>
    }

    @if (User.IsInRole("Comment"))
    {
        <hr/>
        <section>
            @if (Model.Comments.Count > 0)
            {
                <h3>@SharedLocalizer["Topic_Details_Comments"]</h3>
                @foreach (var comment in PrepareComments(Model.Comments))
                {
                    <div style="margin-left: @(comment.Depth * 40)px">
                        <div class=" border border-dark rounded p-2 m-2">
                            <div>
                                @if (!comment.Anonymous || User.IsInRole("SeeAuthorOfAnonymousComment") || User.Identity!.Name!.Equals(comment.Author.UserName))
                                {
                                    if (comment.Anonymous)
                                    {
                                        <h5 class="Comment__AuthorName">@comment.Author.FirstName @comment.Author.LastName - @comment.Author.Email - @SharedLocalizer["Anonymous"]</h5>
                                    }
                                    else
                                    {
                                        <h5 class="Comment__AuthorName">@comment.Author.FirstName @comment.Author.LastName - @comment.Author.Email</h5>
                                    }
                                }
                                else
                                {
                                    <h5 class="Comment__AuthorName">@SharedLocalizer["Anonymous"]</h5>
                                }
                                <p >@comment.CreatedAt</p>
                                <p>
                                    @if (comment.Text == "Deleted comment")
                                    {
                                        @SharedLocalizer["Deleted comment"]
                                    }
                                    else
                                    {
                                        @comment.Text
                                    }
                                </p>
                                <div class="d-flex">
                                    <a href="#" class="ReplyButton p-2" value="" onclick="ReplyButtonClick('@comment.CommentId')"><i class="fa-solid fa-reply fa-lg"></i></a>
                                    @if (Html.CanDeleteComment(comment, User.Identity?.Name, User.IsInRole("Comment"), User.IsInRole("AnyComment")))
                                    {
                                        <a class="ms-auto p-2" asp-action="DeleteComment" asp-route-commentId="@comment.CommentId" asp-route-topicId="@Model.TopicId"><i class="fa-solid fa-x fa-lg"></i></a>
                                    }
                                </div>

                            </div>
                            <div class="Comment__reply row" id="ReplyForm@(comment.CommentId)" style="display: none;">
                                @{ Html.RenderPartial("AddComment", new Comment() {TopicId = Model.TopicId, ParentCommentId = @comment.CommentId}); }
                            </div>
                        </div>
                    </div>
                }
            }
            <h4>@SharedLocalizer["Topic_Details_NewComment"]</h4>
            @{ Html.RenderPartial("AddComment", new Comment() {TopicId = Model.TopicId}); }
        </section>
    }
</article>

@functions{

    private static IEnumerable<Comment> PrepareComments(IEnumerable<Comment> comments)
    {
        List<Comment> returnComments = new ();

        //Foreach root comment
        foreach(var comment in comments.Where(x => x.ParentComment == null))
        {
            returnComments.Add(comment);
            returnComments.AddRange(PrepareReplies(comment.Replies, 1));
        }

        return returnComments;
    }

    private static IEnumerable<Comment> PrepareReplies(IEnumerable<Comment> comments, int depth)
    {
        List<Comment> returnComments = new ();

        foreach (var comment in comments)
        {
            comment.Depth = depth;
            returnComments.Add(comment);
            returnComments.AddRange(PrepareReplies(comment.Replies, depth + 1));
        }
        
        return returnComments;
    }
}

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
    
    <script>
    $(document).ready(function (){
        $("#btn-interest").on("click", function (){
            var topicId = @Model.TopicId;
            var url = '@Url.Action("Interest", "Topic")' + "?topicId=" + topicId;
            $.ajax({
            type: 'GET',
            url: url,
            contentType: false,
            processData: false,
            cache: false,
            success: function (response) {
                var element = $("#btn-interest");
                element = element[0];
                
                console.log(element);
                if (element.classList.contains("interested")){
                    element.innerHTML = "@SharedLocalizer["Add interest"]";
                    element.classList.remove("interested");
                    element.classList.add("not-interested");
                    console.log("User removed interest from this topic");
                }
                else if (element.classList.contains("not-interested")){
                    element.innerHTML = "@SharedLocalizer["Remove interest"]";
                    element.classList.remove("not-interested");
                    element.classList.add("interested");
                    console.log("User interested in this topic");
                }
                else{
                    console.log("Error");
                }
                 console.log(response);  
            },
             error: function (response){
                console.log("Ajax failed");
                }
            });
        });
    });
    </script>
    
    <script>
        function ReplyButtonClick(val){
            var replyForm = "ReplyForm"+val;
        
            var div = document.getElementById(replyForm);
            if (div.style.display !== 'none') {
                div.style.display = 'none';
                console.log(replyForm + ", hide");
            }
            else {
                div.style.display = 'block';
                console.log(replyForm + ", show");
            }
        }
    </script>
}