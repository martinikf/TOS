@using TOS.Extensions
@model TOS.Models.Topic

<article class="position-relative border-bottom">
    <header>
        <h3 class="h5">
            <a asp-controller="Topic" asp-action="Details" asp-route-id="@Model.TopicId">@Html.SelectStringByLanguage(Model.NameEng, Model.Name)</a>
        </h3>
        @if (Model.SupervisorId != null)
        {
            <h4 class="h6">@Model.Supervisor!.GetDisplayName()</h4>
        }
        @if (Model.Visible == false)
        {
            <span class="badge bg-danger">@SharedLocalizer["Hidden topic"]</span>
        }
        @if (Model.AssignedId == null)
        {
            <span class="badge bg-success">@SharedLocalizer["Free topic"]</span>
        }
        else
        {
            <span class="badge bg-danger">@SharedLocalizer["Taken topic"]</span>
        }
        @if (Model.Proposed)
        {
            <span class="badge bg-success">@SharedLocalizer["Proposed topic"]</span>
        }
        @if (Model.Creator.UserRoles.Any(x => x.Role.Name!.Equals("External")))
        {
            <span class="badge bg-success">@SharedLocalizer["External topic"]</span>
        }
        else if (Model.Creator.UserRoles.Any(x => x.Role.Name!.Equals("Student")))
        {
            <span class="badge bg-success">@SharedLocalizer["Student topic"]</span>
        }

        @foreach (var programme in Model.TopicRecommendedPrograms.Select(x => x.Programme))
        {
            <span class="badge bg-secondary">@Html.SelectStringByLanguage(programme.NameEng, programme.Name)</span>
        }
        <span class="badge rounded-pill bg-secondary">@Model.UserInterestedTopics.Count</span>
    </header>
    
    <p>@Html.SelectStringByLanguage(Model.DescriptionShortEng!, Model.DescriptionShort)</p>
</article>